// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Bcp.Infrastructure.Persistence;

#nullable disable

namespace Bcp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bcp.Core.Models.Beneficiary", b =>
                {
                    b.Property<int>("BeneficiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BeneficiaryId"));

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("BeneficiaryId");

                    b.HasAlternateKey("Cpf", "Card");

                    b.ToTable("Beneficiaries");
                });

            modelBuilder.Entity("bcp.Core.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FileId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("bcp.Core.Models.FileError", b =>
                {
                    b.Property<int>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ErrorId"));

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FileId")
                        .HasColumnType("integer");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("integer");

                    b.HasKey("ErrorId");

                    b.HasIndex("FileId");

                    b.ToTable("FileError");
                });

            modelBuilder.Entity("bcp.Core.Models.FileNotification", b =>
                {
                    b.Property<int>("FileNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FileNotificationId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("FileNotificationId");

                    b.HasIndex("Status");

                    b.ToTable("FileNotifications");
                });

            modelBuilder.Entity("bcp.Core.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StoreId"));

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("character varying(19)");

                    b.HasKey("StoreId");

                    b.HasAlternateKey("StoreName", "OwnerName");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("bcp.Core.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("BeneficiaryId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("DateOfOccurrence")
                        .HasColumnType("date");

                    b.Property<int>("FileId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("TimeOfOccurrence")
                        .HasColumnType("interval");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("integer");

                    b.HasKey("TransactionId");

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("FileId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("bcp.Core.Models.TransactionType", b =>
                {
                    b.Property<int>("TransactionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionTypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nature")
                        .HasColumnType("integer");

                    b.HasKey("TransactionTypeId");

                    b.ToTable("TransactionType");

                    b.HasData(
                        new
                        {
                            TransactionTypeId = 1,
                            Description = "Debit",
                            Nature = 1
                        },
                        new
                        {
                            TransactionTypeId = 2,
                            Description = "Boleto",
                            Nature = -1
                        },
                        new
                        {
                            TransactionTypeId = 3,
                            Description = "Financing",
                            Nature = -1
                        },
                        new
                        {
                            TransactionTypeId = 4,
                            Description = "Credit",
                            Nature = 1
                        },
                        new
                        {
                            TransactionTypeId = 5,
                            Description = "Loan Receipt",
                            Nature = 1
                        },
                        new
                        {
                            TransactionTypeId = 6,
                            Description = "Sales",
                            Nature = 1
                        },
                        new
                        {
                            TransactionTypeId = 7,
                            Description = "TED Receipt",
                            Nature = 1
                        },
                        new
                        {
                            TransactionTypeId = 8,
                            Description = "DOC Receipt",
                            Nature = 1
                        },
                        new
                        {
                            TransactionTypeId = 9,
                            Description = "Rent",
                            Nature = -1
                        });
                });

            modelBuilder.Entity("bcp.Core.Models.FileError", b =>
                {
                    b.HasOne("bcp.Core.Models.File", "File")
                        .WithMany("Error")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("bcp.Core.Models.Transaction", b =>
                {
                    b.HasOne("bcp.Core.Models.Beneficiary", "Beneficiary")
                        .WithMany()
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bcp.Core.Models.File", "File")
                        .WithMany("Transactions")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bcp.Core.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bcp.Core.Models.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiary");

                    b.Navigation("File");

                    b.Navigation("Store");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("bcp.Core.Models.File", b =>
                {
                    b.Navigation("Error");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
